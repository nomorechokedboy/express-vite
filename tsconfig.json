{
  "compilerOptions": {
    "target": "ESNext",
    "module": "ESNext" /* Specify what module code is generated. */,
    // "rootDir": "." /* Specify the root folder within your source files. */,
    "moduleResolution": "Node" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "baseUrl": "." /* Specify the base directory to resolve non-relative module names. */,
    "paths": {
      "@/*": ["./src/*"],
      "@libs": ["./src/libs/index"]
    },
    // "rootDirs": [
    //   "."
    // @typesultiple folders to be treated as one when resolving modules. */,
    "typeRoots": ["./src/types", "./node_modules/@types"],
    "types": [] /* Specify type package names to be included without being referenced in a source file. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    "strict": true /* Enable all strict type-checking options. */,
    "strictNullChecks": true /* When type checking, take into account `null` and `undefined`. */,
    "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
    "noUnusedLocals": true /* Enable error reporting when a local variables aren't read. */,
    "noUnusedParameters": true /* Raise an error when a function parameter isn't read */,
    "noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements. */,
    "noImplicitAny": true,
    "allowUnusedLabels": true /* Disable error reporting for unused labels. */,

    "resolveJsonModule": true,

    /* Completeness */
    // "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "outDir": "./build",
    // "sourceMap": true,
    "lib": ["ESNext"]
  },
  "exclude": ["node_modules", "test", "build", "dist"],
  "include": ["."],
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ]
}
